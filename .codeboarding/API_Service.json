{
  "description": "The system is built around a FastAPI Application that serves as the central entry point for all client interactions. It exposes Job Creation Endpoints for initiating new code analysis and documentation generation tasks, and Job Status Retrieval Endpoints for monitoring their progress and fetching results. All job-related data is managed persistently through DuckDB CRUD Operations. When a job is created, the Job Creation Endpoints initiate a Job Processing Background Task to handle the heavy computational work asynchronously. This background task interacts with the DuckDB CRUD Operations to update job statuses and store results. Depending on the job type, it may also invoke the Diagram Generator for visual documentation or the Output Generation Engine for other analysis outputs. The Job Data Model ensures consistent data structures and validation across the entire system.",
  "components": [
    {
      "name": "FastAPI Application",
      "description": "The core web server instance, responsible for defining and managing all API routes, middleware, and overall request/response handling. It serves as the central orchestrator for all incoming API calls.",
      "referenced_source_code": [
        {
          "qualified_name": "local_app.py:app",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/local_app.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        }
      ],
      "assigned_files": [
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/local_app.py"
      ],
      "can_expand": true
    },
    {
      "name": "Job Creation Endpoints",
      "description": "Provides the API endpoints for users to submit new code analysis and documentation generation requests, validating input and initiating the job lifecycle.",
      "referenced_source_code": [
        {
          "qualified_name": "local_app.py:start_generation_job",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/local_app.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        },
        {
          "qualified_name": "local_app.py:start_docs_generation_job",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/local_app.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        }
      ],
      "assigned_files": [],
      "can_expand": true
    },
    {
      "name": "Job Status Retrieval Endpoints",
      "description": "Offers API endpoints for clients to query the current status, progress, and results of previously submitted jobs.",
      "referenced_source_code": [
        {
          "qualified_name": "local_app.py:get_job",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/local_app.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        },
        {
          "qualified_name": "local_app.py:get_github_action_status",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/local_app.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        },
        {
          "qualified_name": "local_app.py:list_jobs",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/local_app.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        }
      ],
      "assigned_files": [],
      "can_expand": false
    },
    {
      "name": "Job Processing Background Task",
      "description": "Asynchronously executes the core job logic, offloading heavy computation from the main API thread to ensure responsiveness. It coordinates the actual analysis and generation steps.",
      "referenced_source_code": [
        {
          "qualified_name": "local_app.py:generate_onboarding",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/local_app.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        },
        {
          "qualified_name": "local_app.py:process_docs_generation_job",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/local_app.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        }
      ],
      "assigned_files": [],
      "can_expand": true
    },
    {
      "name": "Job Data Model",
      "description": "Defines the data structures (e.g., Pydantic models) for jobs and incoming documentation generation requests, ensuring data consistency and validation across the API.",
      "referenced_source_code": [
        {
          "qualified_name": "local_app.py:JobStatus",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/local_app.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        },
        {
          "qualified_name": "local_app.py:DocsGenerationRequest",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/local_app.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        },
        {
          "qualified_name": "local_app.py:make_job",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/local_app.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        }
      ],
      "assigned_files": [],
      "can_expand": false
    },
    {
      "name": "DuckDB CRUD Operations",
      "description": "Handles persistent job management by interacting with the DuckDB database for storing, retrieving, and updating job records.",
      "referenced_source_code": [],
      "assigned_files": [],
      "can_expand": true
    },
    {
      "name": "Diagram Generator",
      "description": "A specialized component responsible for generating architectural diagrams and other visual documentation based on the analysis results.",
      "referenced_source_code": [
        {
          "qualified_name": "demo.py:generate_docs_remote",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/demo.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        }
      ],
      "assigned_files": [],
      "can_expand": true
    },
    {
      "name": "Output Generation Engine",
      "description": "A component responsible for generating various analysis outputs, potentially triggered by external events like GitHub Actions, beyond just diagrams.",
      "referenced_source_code": [
        {
          "qualified_name": "github_action.py:generate_analysis",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/github_action.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        }
      ],
      "assigned_files": [],
      "can_expand": true
    },
    {
      "name": "Unclassified",
      "description": "Component for all unclassified files and utility functions (Utility functions/External Libraries/Dependencies)",
      "referenced_source_code": [],
      "assigned_files": [],
      "can_expand": false
    }
  ],
  "components_relations": [
    {
      "relation": "Orchestrates",
      "src_name": "FastAPI Application",
      "dst_name": "Job Creation Endpoints"
    },
    {
      "relation": "Orchestrates",
      "src_name": "FastAPI Application",
      "dst_name": "Job Status Retrieval Endpoints"
    },
    {
      "relation": "Interacts with to save new job details",
      "src_name": "Job Creation Endpoints",
      "dst_name": "DuckDB CRUD Operations"
    },
    {
      "relation": "Initiates",
      "src_name": "Job Creation Endpoints",
      "dst_name": "Job Processing Background Task"
    },
    {
      "relation": "Uses for input validation and data structuring",
      "src_name": "Job Creation Endpoints",
      "dst_name": "Job Data Model"
    },
    {
      "relation": "Interacts with to fetch job data",
      "src_name": "Job Status Retrieval Endpoints",
      "dst_name": "DuckDB CRUD Operations"
    },
    {
      "relation": "Uses for output structuring",
      "src_name": "Job Status Retrieval Endpoints",
      "dst_name": "Job Data Model"
    },
    {
      "relation": "Interacts with to update job status and store results",
      "src_name": "Job Processing Background Task",
      "dst_name": "DuckDB CRUD Operations"
    },
    {
      "relation": "Calls to produce diagrams",
      "src_name": "Job Processing Background Task",
      "dst_name": "Diagram Generator"
    },
    {
      "relation": "Calls for other analysis outputs",
      "src_name": "Job Processing Background Task",
      "dst_name": "Output Generation Engine"
    }
  ]
}
