{
  "description": "The `Orchestration & Workflow` component is central to the system, coordinating the entire analysis pipeline. Its interactions with other components are crucial for the system's functionality.",
  "components": [
    {
      "name": "api_layer",
      "description": "The primary interface for external communication, responsible for receiving analysis requests via HTTP and returning the final processed results. It acts as the system's public-facing entry point.",
      "referenced_source_code": [
        {
          "qualified_name": "local_app",
          "reference_file": "/mnt/e/StartUp/CodeBoarding/local_app.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "github_action",
          "reference_file": "/mnt/e/StartUp/CodeBoarding/github_action.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        }
      ]
    },
    {
      "name": "orchestration_workflow",
      "description": "The central coordinator that manages the end-to-end analysis pipeline. It initiates static analysis, triggers the AI engine, coordinates with the persistence layer for caching and differential checks, and sends the final, validated results to the output generator.",
      "referenced_source_code": [
        {
          "qualified_name": "local_app",
          "reference_file": "/mnt/e/StartUp/CodeBoarding/local_app.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "github_action",
          "reference_file": "/mnt/e/StartUp/CodeBoarding/github_action.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        }
      ]
    },
    {
      "name": "static_analysis_module",
      "description": "Responsible for parsing source code, building abstract syntax trees (ASTs), control flow graphs (CFGs), and extracting raw code metadata. It provides the foundational data for subsequent analysis steps.",
      "referenced_source_code": [
        {
          "qualified_name": "astroid",
          "reference_file": "<implied>",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "python-call-graph",
          "reference_file": "<implied>",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "networkx",
          "reference_file": "<implied>",
          "reference_start_line": 1,
          "reference_end_line": 1
        }
      ]
    },
    {
      "name": "ai_analysis_engine",
      "description": "Encapsulates all interactions with Large Language Models (LLMs), including prompt engineering, multi-provider support (OpenAI, Anthropic, Google Gemini, AWS Bedrock), and processing LLM responses to derive high-level insights and recommendations.",
      "referenced_source_code": [
        {
          "qualified_name": "LangChain",
          "reference_file": "<implied>",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "LangGraph",
          "reference_file": "<implied>",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "OpenAI",
          "reference_file": "<implied>",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "Anthropic",
          "reference_file": "<implied>",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "Google Gemini",
          "reference_file": "<implied>",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "AWS Bedrock",
          "reference_file": "<implied>",
          "reference_start_line": 1,
          "reference_end_line": 1
        }
      ]
    },
    {
      "name": "data_persistence",
      "description": "Manages data storage and retrieval for analysis results, intermediate data, and caching mechanisms. It abstracts the underlying database (e.g., DuckDB via SQLAlchemy) to provide a consistent data access layer.",
      "referenced_source_code": [
        {
          "qualified_name": "SQLAlchemy",
          "reference_file": "<implied>",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "DuckDB",
          "reference_file": "<implied>",
          "reference_start_line": 1,
          "reference_end_line": 1
        }
      ]
    },
    {
      "name": "output_generation",
      "description": "Transforms processed analysis data into various user-consumable output formats, particularly interactive diagrams (e.g., Mermaid.js, pygraphviz, pydot) and other visualizations.",
      "referenced_source_code": [
        {
          "qualified_name": "pygraphviz",
          "reference_file": "<implied>",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "pydot",
          "reference_file": "<implied>",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "Mermaid.js",
          "reference_file": "<implied>",
          "reference_start_line": 1,
          "reference_end_line": 1
        }
      ]
    },
    {
      "name": "integrations",
      "description": "Handles specific logic related to external services, such as cloning repositories from GitHub (using GitPython, Dulwich) and potential integrations with other platforms (VS Code, MCP Server).",
      "referenced_source_code": [
        {
          "qualified_name": "GitPython",
          "reference_file": "<implied>",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "Dulwich",
          "reference_file": "<implied>",
          "reference_start_line": 1,
          "reference_end_line": 1
        }
      ]
    },
    {
      "name": "configuration",
      "description": "Centralizes application settings, environment variable loading, and credential management, ensuring consistent and secure configuration across all components of the system.",
      "referenced_source_code": [
        {
          "qualified_name": "config_module",
          "reference_file": "<implied>",
          "reference_start_line": 1,
          "reference_end_line": 1
        }
      ]
    }
  ],
  "components_relations": [
    {
      "relation": "initiates analysis requests",
      "src_name": "api_layer",
      "dst_name": "orchestration_workflow"
    },
    {
      "relation": "returns processed results",
      "src_name": "orchestration_workflow",
      "dst_name": "api_layer"
    },
    {
      "relation": "invokes",
      "src_name": "orchestration_workflow",
      "dst_name": "static_analysis_module"
    },
    {
      "relation": "submits static analysis results to",
      "src_name": "orchestration_workflow",
      "dst_name": "ai_analysis_engine"
    },
    {
      "relation": "stores results in",
      "src_name": "orchestration_workflow",
      "dst_name": "data_persistence"
    },
    {
      "relation": "provides cached data to",
      "src_name": "data_persistence",
      "dst_name": "orchestration_workflow"
    },
    {
      "relation": "provides processed data to",
      "src_name": "orchestration_workflow",
      "dst_name": "output_generation"
    },
    {
      "relation": "provides raw source code to",
      "src_name": "integrations",
      "dst_name": "orchestration_workflow"
    },
    {
      "relation": "provides settings to",
      "src_name": "configuration",
      "dst_name": "api_layer"
    },
    {
      "relation": "provides settings to",
      "src_name": "configuration",
      "dst_name": "orchestration_workflow"
    },
    {
      "relation": "provides settings to",
      "src_name": "configuration",
      "dst_name": "static_analysis_module"
    },
    {
      "relation": "provides settings to",
      "src_name": "configuration",
      "dst_name": "ai_analysis_engine"
    },
    {
      "relation": "provides settings to",
      "src_name": "configuration",
      "dst_name": "data_persistence"
    },
    {
      "relation": "provides settings to",
      "src_name": "configuration",
      "dst_name": "output_generation"
    },
    {
      "relation": "provides settings to",
      "src_name": "configuration",
      "dst_name": "integrations"
    }
  ]
}
