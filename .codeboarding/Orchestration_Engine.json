{
  "description": "The CodeBoarding system is orchestrated by the Orchestration Engine, which serves as the central control unit for initiating and managing documentation generation jobs. External systems, such as VSCode and GitHub Actions, interact with the system through the External Integrations component, triggering the Orchestration Engine to begin a new analysis workflow. The Orchestration Engine relies on the Job Database to store and retrieve job-related information and status updates throughout the process. To access the codebase, the Orchestration Engine communicates with the Repository Manager, which handles tasks like cloning repositories and retrieving code differences. Once the code is available, the Orchestration Engine triggers the Static Analysis Engine to perform initial code analysis. Subsequently, it dispatches tasks to the AI Interpretation Layer (Agents) for deeper, AI-driven code understanding. For visual representations, the Orchestration Engine invokes the Diagram Analysis component to generate structured data for diagrams. Finally, the Output Generation Engine is responsible for formatting and producing the final documentation and diagrams in various desired formats.",
  "components": [
    {
      "name": "Orchestration Engine",
      "description": "The central control subsystem responsible for initiating, managing, and coordinating all analysis and documentation generation jobs, acting as the primary orchestrator for the end-to-end workflow.",
      "referenced_source_code": [
        {
          "qualified_name": "local_app.py:start_generation_job",
          "reference_file": "",
          "reference_start_line": null,
          "reference_end_line": null
        },
        {
          "qualified_name": "local_app.py:start_docs_generation_job",
          "reference_file": "",
          "reference_start_line": null,
          "reference_end_line": null
        },
        {
          "qualified_name": "local_app.py:process_docs_generation_job",
          "reference_file": "local_app.py",
          "reference_start_line": 302,
          "reference_end_line": 349
        },
        {
          "qualified_name": "diagram_analysis/diagram_generator.py:generate_analysis",
          "reference_file": "diagram_analysis/diagram_generator.py",
          "reference_start_line": 100,
          "reference_end_line": 169
        }
      ],
      "assigned_files": [],
      "can_expand": true
    },
    {
      "name": "Job Database",
      "description": "Manages the storage and retrieval of job details, including status updates, for the documentation generation pipeline.",
      "referenced_source_code": [
        {
          "qualified_name": "duckdb_crud.py",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/duckdb_crud.py",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ],
      "assigned_files": [],
      "can_expand": false
    },
    {
      "name": "Repository Manager",
      "description": "Handles repository operations such as cloning code repositories and retrieving code differences for analysis.",
      "referenced_source_code": [
        {
          "qualified_name": "repo_utils.git_diff.py",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/repo_utils/git_diff.py",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ],
      "assigned_files": [],
      "can_expand": false
    },
    {
      "name": "Static Analysis Engine",
      "description": "Performs static code analysis on the codebase.",
      "referenced_source_code": [
        {
          "qualified_name": "static_analyzer.scanner.py",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/static_analyzer/scanner.py",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ],
      "assigned_files": [],
      "can_expand": true
    },
    {
      "name": "AI Interpretation Layer (Agents)",
      "description": "Dispatches tasks to AI agents for advanced analysis and interpretation of code.",
      "referenced_source_code": [
        {
          "qualified_name": "agents.agent.py",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/agents/agent.py",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ],
      "assigned_files": [],
      "can_expand": true
    },
    {
      "name": "Diagram Analysis",
      "description": "Generates structured analysis data specifically for creating diagrams.",
      "referenced_source_code": [
        {
          "qualified_name": "diagram_analysis.diagram_generator.py",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/diagram_analysis/diagram_generator.py",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ],
      "assigned_files": [
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/diagram_analysis/__init__.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/diagram_analysis/analysis_json.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/diagram_analysis/diagram_generator.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/diagram_analysis/version.py"
      ],
      "can_expand": true
    },
    {
      "name": "Output Generation Engine",
      "description": "Responsible for the final formatting and generation of documentation and diagrams in various formats.",
      "referenced_source_code": [
        {
          "qualified_name": "output_generators.markdown.py",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/output_generators/markdown.py",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ],
      "assigned_files": [],
      "can_expand": true
    },
    {
      "name": "External Integrations",
      "description": "Provides interfaces for external systems, such as VSCode and GitHub Actions, to trigger analysis workflows.",
      "referenced_source_code": [
        {
          "qualified_name": "github_action.py",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/github_action.py",
          "reference_start_line": null,
          "reference_end_line": null
        },
        {
          "qualified_name": "vscode_runnable.py",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/vscode_runnable.py",
          "reference_start_line": null,
          "reference_end_line": null
        }
      ],
      "assigned_files": [],
      "can_expand": false
    },
    {
      "name": "Unclassified",
      "description": "Component for all unclassified files and utility functions (Utility functions/External Libraries/Dependencies)",
      "referenced_source_code": [],
      "assigned_files": [],
      "can_expand": false
    }
  ],
  "components_relations": [
    {
      "relation": "interacts with",
      "src_name": "Orchestration Engine",
      "dst_name": "Job Database"
    },
    {
      "relation": "requests code from",
      "src_name": "Orchestration Engine",
      "dst_name": "Repository Manager"
    },
    {
      "relation": "triggers",
      "src_name": "Orchestration Engine",
      "dst_name": "Static Analysis Engine"
    },
    {
      "relation": "dispatches tasks to",
      "src_name": "Orchestration Engine",
      "dst_name": "AI Interpretation Layer (Agents)"
    },
    {
      "relation": "invokes",
      "src_name": "Orchestration Engine",
      "dst_name": "Diagram Analysis"
    },
    {
      "relation": "triggers",
      "src_name": "Orchestration Engine",
      "dst_name": "Output Generation Engine"
    },
    {
      "relation": "triggers",
      "src_name": "External Integrations",
      "dst_name": "Orchestration Engine"
    }
  ]
}
