{
  "description": "The system's architecture is centered around a data processing pipeline that transforms raw code information into various human-readable outputs. The LSPClient initiates this process by acquiring raw static analysis data from language servers. This raw data is then fed to the Agents component, which, guided by dynamic prompts defined in agents/prompts.py, performs intelligent analysis and transforms the raw data into structured, processed analysis results. Finally, the Output Generator acts as the presentation layer orchestrator, taking these processed analysis results and delegating their rendering to specialized sub-components: HTMLOutputGenerator for web-based views, MarkdownOutputGenerator for text-based documentation, and DiagramGenerator for visual representations like Mermaid diagrams. This modular design allows for flexible data acquisition, intelligent processing, and diverse output generation, adapting to changes in upstream data sources and downstream presentation requirements.",
  "components": [
    {
      "name": "LSPClient",
      "description": "Responsible for acquiring raw code data from Language Servers.",
      "referenced_source_code": [
        {
          "qualified_name": "LSPClient",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/static_analyzer/lsp_client/client.py",
          "reference_start_line": 19,
          "reference_end_line": 900
        }
      ],
      "can_expand": true
    },
    {
      "name": "Agents",
      "description": "Processes raw analysis data into structured analysis results, guided by prompts.",
      "referenced_source_code": [
        {
          "qualified_name": "agents/prompts.py",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/agents/prompts.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        }
      ],
      "can_expand": true
    },
    {
      "name": "Output Generator",
      "description": "Orchestrates the generation of various output formats from processed analysis data.",
      "referenced_source_code": [],
      "can_expand": true
    },
    {
      "name": "HTMLOutputGenerator",
      "description": "Generates HTML output.",
      "referenced_source_code": [],
      "can_expand": false
    },
    {
      "name": "MarkdownOutputGenerator",
      "description": "Generates Markdown output.",
      "referenced_source_code": [],
      "can_expand": false
    },
    {
      "name": "DiagramGenerator",
      "description": "Generates diagrams.",
      "referenced_source_code": [],
      "can_expand": false
    }
  ],
  "components_relations": [
    {
      "relation": "provides raw analysis data to",
      "src_name": "LSPClient",
      "dst_name": "Agents"
    },
    {
      "relation": "provides processed analysis data to",
      "src_name": "Agents",
      "dst_name": "Output Generator"
    },
    {
      "relation": "orchestrates",
      "src_name": "Output Generator",
      "dst_name": "HTMLOutputGenerator"
    },
    {
      "relation": "orchestrates",
      "src_name": "Output Generator",
      "dst_name": "MarkdownOutputGenerator"
    },
    {
      "relation": "orchestrates",
      "src_name": "Output Generator",
      "dst_name": "DiagramGenerator"
    }
  ]
}
