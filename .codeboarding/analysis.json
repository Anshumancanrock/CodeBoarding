{
  "description": "The system's main flow begins with the `API Service` receiving external requests, which then invokes the `Orchestrator`. The `Orchestrator` acts as the central coordinator, first initiating the `Static Analyzer` to perform code analysis and build foundational data structures. Subsequently, it passes this data to the `AI Interpretation Engine`, a suite of specialized AI agents that interpret the analysis and generate architectural insights. Finally, the `Orchestrator` directs the `Output Generator` to convert these insights into human-readable formats, with the final report being returned back through the `Orchestrator` to the `API Service`.",
  "components": [
    {
      "name": "API Service",
      "description": "Serves as the primary entry point for all external interactions. It exposes the system's capabilities, handling incoming requests and returning the final generated analysis.",
      "referenced_source_code": [
        {
          "qualified_name": "local_app.py",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/local_app.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        },
        {
          "qualified_name": "github_action.py",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/github_action.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        }
      ],
      "can_expand": true
    },
    {
      "name": "Orchestrator",
      "description": "Acts as the central coordinator of the analysis pipeline. It manages the sequence of operations, directing the flow of data between the various components to ensure the end-to-end process runs smoothly.",
      "referenced_source_code": [
        {
          "qualified_name": "agents/meta_agent.py",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/agents/meta_agent.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        }
      ],
      "can_expand": true
    },
    {
      "name": "Static Analyzer",
      "description": "Performs language-aware static analysis of the source code. It builds foundational data structures, including call graphs and package dependencies, which form the basis for the AI interpretation.",
      "referenced_source_code": [
        {
          "qualified_name": "static_analyzer/scanner.py",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/static_analyzer/scanner.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        },
        {
          "qualified_name": "static_analyzer/lsp_client/",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/static_analyzer/lsp_client/",
          "reference_start_line": 0,
          "reference_end_line": 0
        }
      ],
      "can_expand": true
    },
    {
      "name": "AI Interpretation Engine",
      "description": "A suite of specialized AI agents responsible for interpreting the static analysis data. It uses a planner, abstraction, and validator agents, along with a toolkit for reading code artifacts, to generate high-level architectural insights. The core agent functionality, likely defined in `agents/agent.py`, has been updated to enhance or refine the capabilities shared by the specialized agents.",
      "referenced_source_code": [
        {
          "qualified_name": "agents/planner_agent.py",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/agents/planner_agent.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        },
        {
          "qualified_name": "agents/abstraction_agent.py",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/agents/abstraction_agent.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        },
        {
          "qualified_name": "agents/validator_agent.py",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/agents/validator_agent.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        },
        {
          "qualified_name": "agents/tools/",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/agents/tools/",
          "reference_start_line": 0,
          "reference_end_line": 0
        },
        {
          "qualified_name": "agents/agent.py",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/agents/agent.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        }
      ],
      "can_expand": true
    },
    {
      "name": "Output Generator",
      "description": "Responsible for converting the final, validated analysis from the AI engine into human-readable formats. It serializes the analysis data and renders it as diagrams and text.",
      "referenced_source_code": [
        {
          "qualified_name": "output_generators/html.py",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/output_generators/html.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        },
        {
          "qualified_name": "output_generators/markdown.py",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/output_generators/markdown.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        },
        {
          "qualified_name": "diagram_analysis/diagram_generator.py",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/diagram_analysis/diagram_generator.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        }
      ],
      "can_expand": true
    }
  ],
  "components_relations": [
    {
      "relation": "Invokes",
      "src_name": "API Service",
      "dst_name": "Orchestrator"
    },
    {
      "relation": "Invokes",
      "src_name": "Orchestrator",
      "dst_name": "Static Analyzer"
    },
    {
      "relation": "Invokes",
      "src_name": "Orchestrator",
      "dst_name": "AI Interpretation Engine"
    },
    {
      "relation": "Invokes",
      "src_name": "Orchestrator",
      "dst_name": "Output Generator"
    },
    {
      "relation": "Returns final report to",
      "src_name": "Output Generator",
      "dst_name": "Orchestrator"
    },
    {
      "relation": "Returns final report to",
      "src_name": "Orchestrator",
      "dst_name": "API Service"
    }
  ]
}
