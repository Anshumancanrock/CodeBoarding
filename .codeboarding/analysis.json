{
  "description": "CodeBoarding's architecture is centered around an `API Service` that acts as the primary external interface, now with expanded capabilities to handle both direct user requests and automated documentation generation via GitHub Actions. This service initiates jobs, which are then managed by the `Job Database` for persistent storage of job status and results. The `Orchestration Engine` is the core control unit, coordinating the entire documentation generation pipeline. It interacts with the `Repository Manager` to fetch and manage source code, and with the `Static Analysis Engine` to perform deep code analysis. The resulting rich analysis data is then fed to the `AI Interpretation Layer`, a collection of specialized AI agents that generate high-level architectural insights. Finally, the `Output Generation Engine` transforms these insights into various documentation formats, delivering them back to the `API Service` for user consumption or GitHub Action integration. This modular design ensures clear separation of concerns and facilitates efficient processing of documentation generation requests.",
  "components": [
    {
      "name": "API Service",
      "description": "The external interface for CodeBoarding, handling user requests, job initiation, status retrieval, and now specifically integrating with GitHub Actions for automated documentation generation.",
      "referenced_source_code": [
        {
          "qualified_name": "local_app",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/local_app.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        }
      ],
      "assigned_files": [
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/local_app.py"
      ],
      "can_expand": true
    },
    {
      "name": "Job Database",
      "description": "Persistent storage for managing the lifecycle, status, and results of all documentation generation jobs.",
      "referenced_source_code": [
        {
          "qualified_name": "duckdb_crud",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/duckdb_crud.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        }
      ],
      "assigned_files": [
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/duckdb_crud.py"
      ],
      "can_expand": false
    },
    {
      "name": "Orchestration Engine",
      "description": "The central control unit that manages the entire documentation generation pipeline, coordinating all analysis and generation stages.",
      "referenced_source_code": [
        {
          "qualified_name": "diagram_generator",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/diagram_analysis/diagram_generator.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        }
      ],
      "assigned_files": [
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/diagram_analysis/__init__.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/diagram_analysis/analysis_json.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/diagram_analysis/diagram_generator.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/diagram_analysis/version.py"
      ],
      "can_expand": true
    },
    {
      "name": "Repository Manager",
      "description": "Manages all interactions with source code repositories, including cloning, fetching, and extracting version differences.",
      "referenced_source_code": [
        {
          "qualified_name": "__init__",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/agents/diff_analyzer.py",
          "reference_start_line": 21,
          "reference_end_line": 32
        },
        {
          "qualified_name": "git_diff",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/repo_utils/git_diff.py",
          "reference_start_line": 27,
          "reference_end_line": 76
        }
      ],
      "assigned_files": [
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/repo_utils/__init__.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/repo_utils/git_diff.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/repo_utils/errors.py"
      ],
      "can_expand": false
    },
    {
      "name": "Static Analysis Engine",
      "description": "Performs deep, language-specific analysis of source code to extract richer, more detailed, and comprehensive structural information without semantic interpretation.",
      "referenced_source_code": [
        {
          "qualified_name": "scanner",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/static_analyzer/scanner.py",
          "reference_start_line": 13,
          "reference_end_line": 82
        },
        {
          "qualified_name": "client",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/static_analyzer/lsp_client/typescript_client.py",
          "reference_start_line": 10,
          "reference_end_line": 214
        },
        {
          "qualified_name": "analysis_result",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/agents/abstraction_agent.py",
          "reference_start_line": 88,
          "reference_end_line": 88
        }
      ],
      "assigned_files": [
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/static_analyzer/programming_language.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/static_analyzer/__init__.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/static_analyzer/graph.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/static_analyzer/analysis_result.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/static_analyzer/scanner.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/static_analyzer/lsp_client/__init__.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/static_analyzer/lsp_client/typescript_client.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/static_analyzer/lsp_client/client.py"
      ],
      "can_expand": true
    },
    {
      "name": "AI Interpretation Layer",
      "description": "A collection of specialized AI agents that perform sophisticated interpretation of static analysis data, generating enhanced high-level architectural insights, including detailed abstractions, refined planning, robust validation, and comprehensive diff analysis, with structured outputs.",
      "referenced_source_code": [
        {
          "qualified_name": "meta_agent",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/diagram_analysis/diagram_generator.py",
          "reference_start_line": 37,
          "reference_end_line": 37
        },
        {
          "qualified_name": "abstraction_agent",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/diagram_analysis/diagram_generator.py",
          "reference_start_line": 33,
          "reference_end_line": 33
        },
        {
          "qualified_name": "details_agent",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/diagram_analysis/diagram_generator.py",
          "reference_start_line": 32,
          "reference_end_line": 32
        },
        {
          "qualified_name": "planner_agent",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/diagram_analysis/diagram_generator.py",
          "reference_start_line": 34,
          "reference_end_line": 34
        },
        {
          "qualified_name": "validator_agent",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/diagram_analysis/diagram_generator.py",
          "reference_start_line": 35,
          "reference_end_line": 35
        },
        {
          "qualified_name": "diff_analyzer",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/agents/diff_analyzer.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        },
        {
          "qualified_name": "agent",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/agents/diff_analyzer.py",
          "reference_start_line": 20,
          "reference_end_line": 136
        },
        {
          "qualified_name": "agent_responses",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/agents/agent_responses.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        },
        {
          "qualified_name": "prompts",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/agents/details_agent.py",
          "reference_start_line": 23,
          "reference_end_line": 23
        }
      ],
      "assigned_files": [
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/agents/__init__.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/agents/diff_analyzer.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/agents/details_agent.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/agents/validator_agent.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/agents/abstraction_agent.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/agents/planner_agent.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/agents/meta_agent.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/agents/agent_responses.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/agents/prompts.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/agents/agent.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/agents/tools/read_source.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/agents/tools/read_file_structure.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/agents/tools/__init__.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/agents/tools/external_deps.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/agents/tools/read_packages.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/agents/tools/read_cfg.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/agents/tools/get_method_invocations.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/agents/tools/read_git_diff.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/agents/tools/read_file.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/agents/tools/utils.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/agents/tools/read_structure.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/agents/tools/read_docs.py"
      ],
      "can_expand": true
    },
    {
      "name": "Output Generation Engine",
      "description": "Transforms the final, validated architectural insights into various human-readable and diagram-friendly documentation formats, with enhanced capabilities for specific output formats and external integrations like GitHub Actions.",
      "referenced_source_code": [
        {
          "qualified_name": "html",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/github_action.py",
          "reference_start_line": 37,
          "reference_end_line": 51
        },
        {
          "qualified_name": "markdown",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/github_action.py",
          "reference_start_line": 20,
          "reference_end_line": 34
        },
        {
          "qualified_name": "mdx",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/github_action.py",
          "reference_start_line": 54,
          "reference_end_line": 68
        },
        {
          "qualified_name": "sphinx",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/output_generators/sphinx.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        },
        {
          "qualified_name": "github_action",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/CodeBoarding/github_action.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        }
      ],
      "assigned_files": [
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/github_action.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/output_generators/__init__.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/output_generators/sphinx.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/output_generators/mdx.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/output_generators/html.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/output_generators/html_template.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/output_generators/markdown.py"
      ],
      "can_expand": true
    },
    {
      "name": "Unclassified",
      "description": "Component for all unclassified files and utility functions (Utility functions/External Libraries/Dependencies)",
      "referenced_source_code": [],
      "assigned_files": [
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/vscode_constants.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/vscode_runnable.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/utils.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/demo.py",
        "/home/ubuntu/CodeBoarding/repo/CodeBoarding/logging_config.py"
      ],
      "can_expand": false
    }
  ],
  "components_relations": [
    {
      "relation": "Initiates Job",
      "src_name": "API Service",
      "dst_name": "Job Database"
    },
    {
      "relation": "Triggers Analysis",
      "src_name": "API Service",
      "dst_name": "Orchestration Engine"
    },
    {
      "relation": "Requests GitHub Action Job",
      "src_name": "API Service",
      "dst_name": "Orchestration Engine"
    },
    {
      "relation": "Manages Job State",
      "src_name": "Orchestration Engine",
      "dst_name": "Job Database"
    },
    {
      "relation": "Requests Code",
      "src_name": "Orchestration Engine",
      "dst_name": "Repository Manager"
    },
    {
      "relation": "Provides Code",
      "src_name": "Repository Manager",
      "dst_name": "Orchestration Engine"
    },
    {
      "relation": "Requests Static Analysis",
      "src_name": "Orchestration Engine",
      "dst_name": "Static Analysis Engine"
    },
    {
      "relation": "Provides Richer Analysis Results",
      "src_name": "Static Analysis Engine",
      "dst_name": "Orchestration Engine"
    },
    {
      "relation": "Feeds Rich Analysis Data",
      "src_name": "Orchestration Engine",
      "dst_name": "AI Interpretation Layer"
    },
    {
      "relation": "Returns Enhanced Architectural Insights",
      "src_name": "AI Interpretation Layer",
      "dst_name": "Orchestration Engine"
    },
    {
      "relation": "Queries Diff",
      "src_name": "AI Interpretation Layer",
      "dst_name": "Repository Manager"
    },
    {
      "relation": "Passes Enhanced Insights for Generation",
      "src_name": "Orchestration Engine",
      "dst_name": "Output Generation Engine"
    },
    {
      "relation": "Delivers Documentation",
      "src_name": "Output Generation Engine",
      "dst_name": "API Service"
    },
    {
      "relation": "Provides GitHub Action Output",
      "src_name": "Output Generation Engine",
      "dst_name": "API Service"
    }
  ]
}
